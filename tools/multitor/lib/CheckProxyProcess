#!/usr/bin/env bash

# shellcheck shell=bash

# ``````````````````````````````````````````````````````````````````````````````
# Function name: CheckProxyProcess()
#
# Description:
#   Manages proxy processes.
#
# Usage:
#   CheckProxyProcess
#
# Examples:
#   CheckProxyProcess
#

function CheckProxyProcess() {

  # shellcheck disable=SC2034
  local _FUNCTION_ID="CheckProxyProcess"
  local _STATE=0

  # shellcheck disable=SC2034
  local proc_type="$1"

  # First, we remove current processes.
  #_proxy_processes=($(pidof "$proc_type"))
  IFS=" " read -r -a _proxy_processes <<< "$(pidof "$proc_type")"

  if [[ ${#_proxy_processes[@]} -ne 0 ]] ; then

    for _tpr in "${_proxy_processes[@]}" ; do

      # shellcheck disable=SC2154
      for _rg in "${_proxy_list[@]}" ; do

        _tmp_proxy_list+="\\|$_rg"

      done

      # In this case, we can search for a specific identifier (${_tpr}).
      # shellcheck disable=SC2009,SC2034,SC2154
      _hpr=$(ps -ax | grep "$proc_type" | grep -v "grep" | grep "$_tpr" | grep "multitor${_tmp_proxy_list}")

      if [[ -z "$_hpr" ]] ; then

        _logger "warn" \
          "${_FUNCTION_ID}()" \
          "not found or unknown proxy process for ${proc_type}"

      else

        _proxy_processes_list+=("$_tpr")

        _logger "info" \
          "${_FUNCTION_ID}()" \
          "added proxy process with '${proc_type}:${_tpr}' pid"

      fi

    done

  else

    _logger "warn" \
      "${_FUNCTION_ID}()" \
      "not found proxy processes"

  fi

  return $_STATE

}
